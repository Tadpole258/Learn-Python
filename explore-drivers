from keras.models import Sequential
from keras.layers import Dense
from sklearn.datasets.samples_generator import make_blobs
from sklearn.preprocessing import MinMaxScaler

X, y = make_blobs(n_samples=500, centers=2, n_features=5, random_state=1)
scalar = MinMaxScaler()
scalar.fit(X)
X = scalar.transform(X)

# define the models
sequen_model = Sequential()
sequen_model.add(Dense(4, input_dim=5, activation='relu'))
sequen_model.add(Dense(4, activation='relu'))
sequen_model.add(Dense(1, activation='sigmoid'))
sequen_model.compile(loss='binary_crossentropy', optimizer='adam')
sequen_model.fit(X, y, epochs=500, verbose=0)

Xnew, _ = make_blobs(n_samples=10, centers=2, n_features=5, random_state=1)
Xnew = scalar.transform(Xnew)

ynew = sequen_model.predict_classes(Xnew)

for i in range(len(Xnew)):
    print('X = %s, Predicted = %s' % (Xnew[i],ynew[i]))
